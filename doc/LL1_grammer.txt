program -> mainClassDecl classDecl

mainClassDecl -> class ID { public static void main ( String [ ] ID ) { stmt } }

classDecl -> class ID extendsDecl { classVarDecl methodDecl } classDecl | EPSILON

extendsDecl -> extends ID | EPSILON

classVarDecl -> type ID ; classVarDecl | EPSILON

 methodDecl -> public type ID ( formal formalRest ) { stmt return expr ; } methodDecl | EPSILON

formal -> type ID

formalRest -> , type ID  formalRest | EPSILON

type -> int | bool | ID

singleStmt -> varDecl | block | ifElse | whileDecl | print | assignment

stmt -> singleStmt stmt | EPSILON

varDecl -> type ID = expr ;

block -> { stmt }

ifElse -> if ( expr ) singleStmt else singleStmt

whileDecl -> while ( expr ) stmt

print -> System.out.println ( expr ) ;

assignment -> ID = expr ;

expr -> logicalOr exprPrime

exprPrime -> . ID ( expr exprRest ) | EPSILON

exprRest -> , expr exprRest | EPSILON

logicalOr -> logicalAnd or logicalOr | logicalAnd

logicalAnd -> equalsOrNotEquals and logicalAnd | equalsOrNotEquals

equalsOrNotEquals -> relation == equalsOrNotEquals | relation != equalsOrNotEquals | relation

relation -> plusOrMinus =< relation | plusOrMinus >= relation | plusOrMinus > relation | plusOrMinus < relation | plusOrMinus

plusOrMinus -> multOrDiv + plusOrMinus | multOrDiv - plusOrMinus | multOrDiv

multOrDiv -> unary * multOrDiv | unary / multOrDiv | unary

unary -> ! expr | - expr | atom

atom -> INT | BOOL | null | this | new ID ( ) | ID | ( expr )
